#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: "2.2"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}


services:
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  coordinator:
    image: apache/druid:0.22.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - environment

  broker:
    image: apache/druid:0.22.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - environment

  historical:
    image: apache/druid:0.22.0
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - environment

  middlemanager:
    image: apache/druid:0.22.0
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  router:
    image: apache/druid:0.22.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment

  process_a:
    image: test:0.1.2
    environment:
      SHOULD_INITIALIZE_PRODUCER: 'true'
      NUMBER_OF_MESSAGES_TO_PRODUCE: '10'
      PRODUCE_TO_TOPIC: 'A'
      PROCESS_NAME: 'process_a'
      LOG_LEVEL: 'DEBUG'
      KAFKA_ADDRESS: '192.168.1.40:9092'
      SCHEMA_REGISTRY_URL: 'http://192.168.1.40:8087'
      SLEEP_BETWEEN_SENDS_MILLIS: '1000'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry

  process_b:
    image: test:0.1.2
    environment:
      SHOULD_INITIALIZE_PRODUCER: 'true'
      SHOULD_INITIALIZE_CONSUMER: 'true'
      NUMBER_OF_MESSAGES_TO_PRODUCE: '10'
      CONSUME_FROM_TOPIC: 'A'
      PRODUCE_TO_TOPIC: 'B'
      PROCESS_NAME: 'process_b'
      LOG_LEVEL: 'DEBUG'
      KAFKA_ADDRESS: '192.168.1.40:9092'
      SCHEMA_REGISTRY_URL: 'http://192.168.1.40:8087'
      SLEEP_BETWEEN_SENDS_MILLIS: '15'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
  process_c:
    image: test:0.1.2
    environment:
      SHOULD_INITIALIZE_PRODUCER: 'true'
      SHOULD_INITIALIZE_CONSUMER: 'true'
      NUMBER_OF_MESSAGES_TO_PRODUCE: '10'
      CONSUME_FROM_TOPIC: 'B'
      PRODUCE_TO_TOPIC: 'C'
      PROCESS_NAME: 'process_c'
      LOG_LEVEL: 'DEBUG'
      KAFKA_ADDRESS: '192.168.1.40:9092'
      SCHEMA_REGISTRY_URL: 'http://192.168.1.40:8087'
      SLEEP_BETWEEN_SENDS_MILLIS: '15'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
  process_d:
    image: test:0.1.2
    environment:
      SHOULD_INITIALIZE_PRODUCER: 'true'
      SHOULD_INITIALIZE_CONSUMER: 'true'
      NUMBER_OF_MESSAGES_TO_PRODUCE: '10'
      CONSUME_FROM_TOPIC: 'C'
      PRODUCE_TO_TOPIC: 'D'
      LOG_LEVEL: 'DEBUG'
      PROCESS_NAME: 'process_d'
      KAFKA_ADDRESS: '192.168.1.40:9092'
      SCHEMA_REGISTRY_URL: 'http://192.168.1.40:8087'
      SLEEP_BETWEEN_SENDS_MILLIS: '15'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
  process_e:
    image: test:0.1.2
    environment:
      SHOULD_INITIALIZE_PRODUCER: 'true'
      SHOULD_INITIALIZE_CONSUMER: 'true'
      NUMBER_OF_MESSAGES_TO_PRODUCE: '10'
      CONSUME_FROM_TOPIC: 'D'
      PRODUCE_TO_TOPIC: 'E'
      PROCESS_NAME: 'process_e'
      LOG_LEVEL: 'DEBUG'
      KAFKA_ADDRESS: '192.168.1.40:9092'
      SCHEMA_REGISTRY_URL: 'http://192.168.1.40:8081'
      SLEEP_BETWEEN_SENDS_MILLIS: '15'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.4.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://192.168.1.40:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8087:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'DEBUG'