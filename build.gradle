/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenLocal()
    jcenter()
    maven {
        url("https://packages.confluent.io/maven/")
    }
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'org.apache.avro:avro:1.11.0'
    implementation 'org.apache.kafka:kafka-clients:3.0.0'
    implementation 'io.confluent:kafka-avro-serializer:7.0.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.0'
    // https://mvnrepository.com/artifact/log4j/log4j
    implementation 'log4j:log4j:1.2.17'


    // local dependency
    implementation 'org.example:AvroSchemas:0.5.0_Init'
}

application {
    // Define the main class for the application.
    mainClass = 'org.bg.example.generic.process.App'
}

jar {
    manifest {
        attributes (
                'Main-Class': 'org.bg.example.generic.process.App'
        )
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}