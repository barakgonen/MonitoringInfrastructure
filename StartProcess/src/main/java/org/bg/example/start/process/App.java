/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.bg.example.start.process;

import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.common.errors.SerializationException;
import org.bg.avro.structures.base.objects.CoordinateWithId;

public class App {
    public static void main(String[] args) {

        MyKafkaProducer kafkaProducer = new MyKafkaProducer();
        int counter = 1;
        while (true) {
            try {
                ProducerRecord<String, CoordinateWithId> record = new ProducerRecord<>("FROM-START-PROCESS",
                        String.valueOf(counter), DataGenerator.generateData());
                System.out.println("Start process, id: " + record.key());
                kafkaProducer.send(record);
                Thread.sleep(1);
            } catch (InterruptedException | SerializationException e) {
                System.out.println("ERROR!!!! " + e.getMessage());
                e.printStackTrace();
            }
            counter++;
        }

// When you're finished producing records, you can flush the producer to ensure it has all been written to Kafka and
// then close the producer to free its resources.
//        producer.flush();
//        producer.close();
    }
}
